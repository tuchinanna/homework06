name: CMake Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Set up dependencies (Linux)
        if: matrix.os == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ libgtest-dev rpm dpkg-dev
  
      - name: Set up dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install cmake nsis wixtoolset -y
  
      - name: Set up dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install cmake googletest
  
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
  
      - name: Create build directory
        run: cmake -S . -B _build -DCMAKE_INSTALL_PREFIX=_install
  
      - name: Build
        run: cmake --build _build

      - name: Run tests
        working-directory: build
        run: ctest --output-on-failure
  
      - name: Package
        working-directory: build
        run: |
          cpack || echo "No package created"
  
      - name: Rename artifacts
        working-directory: build
        run: |
          mkdir -p output
          if ls *.deb 1>/dev/null 2>&1; then mv *.deb output/solver.deb; fi
          if ls *.rpm 1>/dev/null 2>&1; then mv *.rpm output/solver.rpm; fi
          if ls *.msi 1>/dev/null 2>&1; then mv *.msi output/solver.msi; fi
          if ls *.exe 1>/dev/null 2>&1; then mv *.exe output/solver-setup.exe; fi
          if ls *.dmg 1>/dev/null 2>&1; then mv *.dmg output/solver.dmg; fi
  
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-package
          path: build/output/*
          if-no-files-found: warn
          retention-days: 5
